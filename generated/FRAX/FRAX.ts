// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FRAXBurned extends ethereum.Event {
  get params(): FRAXBurned__Params {
    return new FRAXBurned__Params(this);
  }
}

export class FRAXBurned__Params {
  _event: FRAXBurned;

  constructor(event: FRAXBurned) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FRAXMinted extends ethereum.Event {
  get params(): FRAXMinted__Params {
    return new FRAXMinted__Params(this);
  }
}

export class FRAXMinted__Params {
  _event: FRAXMinted;

  constructor(event: FRAXMinted) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FRAX__frax_infoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }
}

export class FRAX extends ethereum.SmartContract {
  static bind(address: Address): FRAX {
    return new FRAX("FRAX", address);
  }

  COLLATERAL_RATIO_PAUSER(): Bytes {
    let result = super.call(
      "COLLATERAL_RATIO_PAUSER",
      "COLLATERAL_RATIO_PAUSER():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_COLLATERAL_RATIO_PAUSER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "COLLATERAL_RATIO_PAUSER",
      "COLLATERAL_RATIO_PAUSER():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ADDRESS(): Address {
    let result = super.call(
      "DEFAULT_ADMIN_ADDRESS",
      "DEFAULT_ADMIN_ADDRESS():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_DEFAULT_ADMIN_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ADDRESS",
      "DEFAULT_ADMIN_ADDRESS():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  collateral_ratio_paused(): boolean {
    let result = super.call(
      "collateral_ratio_paused",
      "collateral_ratio_paused():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_collateral_ratio_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "collateral_ratio_paused",
      "collateral_ratio_paused():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  controller_address(): Address {
    let result = super.call(
      "controller_address",
      "controller_address():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_controller_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "controller_address",
      "controller_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  creator_address(): Address {
    let result = super.call(
      "creator_address",
      "creator_address():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_creator_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "creator_address",
      "creator_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  eth_usd_consumer_address(): Address {
    let result = super.call(
      "eth_usd_consumer_address",
      "eth_usd_consumer_address():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_eth_usd_consumer_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "eth_usd_consumer_address",
      "eth_usd_consumer_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  eth_usd_price(): BigInt {
    let result = super.call("eth_usd_price", "eth_usd_price():(uint256)", []);

    return result[0].toBigInt();
  }

  try_eth_usd_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "eth_usd_price",
      "eth_usd_price():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  frax_eth_oracle_address(): Address {
    let result = super.call(
      "frax_eth_oracle_address",
      "frax_eth_oracle_address():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_frax_eth_oracle_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "frax_eth_oracle_address",
      "frax_eth_oracle_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  frax_info(): FRAX__frax_infoResult {
    let result = super.call(
      "frax_info",
      "frax_info():(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );

    return new FRAX__frax_infoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt()
    );
  }

  try_frax_info(): ethereum.CallResult<FRAX__frax_infoResult> {
    let result = super.tryCall(
      "frax_info",
      "frax_info():(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FRAX__frax_infoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt()
      )
    );
  }

  frax_pools(param0: Address): boolean {
    let result = super.call("frax_pools", "frax_pools(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_frax_pools(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("frax_pools", "frax_pools(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  frax_pools_array(param0: BigInt): Address {
    let result = super.call(
      "frax_pools_array",
      "frax_pools_array(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_frax_pools_array(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "frax_pools_array",
      "frax_pools_array(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  frax_price(): BigInt {
    let result = super.call("frax_price", "frax_price():(uint256)", []);

    return result[0].toBigInt();
  }

  try_frax_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("frax_price", "frax_price():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  frax_step(): BigInt {
    let result = super.call("frax_step", "frax_step():(uint256)", []);

    return result[0].toBigInt();
  }

  try_frax_step(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("frax_step", "frax_step():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fxs_address(): Address {
    let result = super.call("fxs_address", "fxs_address():(address)", []);

    return result[0].toAddress();
  }

  try_fxs_address(): ethereum.CallResult<Address> {
    let result = super.tryCall("fxs_address", "fxs_address():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fxs_eth_oracle_address(): Address {
    let result = super.call(
      "fxs_eth_oracle_address",
      "fxs_eth_oracle_address():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fxs_eth_oracle_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fxs_eth_oracle_address",
      "fxs_eth_oracle_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fxs_price(): BigInt {
    let result = super.call("fxs_price", "fxs_price():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fxs_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fxs_price", "fxs_price():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  genesis_supply(): BigInt {
    let result = super.call("genesis_supply", "genesis_supply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_genesis_supply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "genesis_supply",
      "genesis_supply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  globalCollateralValue(): BigInt {
    let result = super.call(
      "globalCollateralValue",
      "globalCollateralValue():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_globalCollateralValue(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "globalCollateralValue",
      "globalCollateralValue():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  global_collateral_ratio(): BigInt {
    let result = super.call(
      "global_collateral_ratio",
      "global_collateral_ratio():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_global_collateral_ratio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "global_collateral_ratio",
      "global_collateral_ratio():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  last_call_time(): BigInt {
    let result = super.call("last_call_time", "last_call_time():(uint256)", []);

    return result[0].toBigInt();
  }

  try_last_call_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "last_call_time",
      "last_call_time():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minting_fee(): BigInt {
    let result = super.call("minting_fee", "minting_fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minting_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minting_fee", "minting_fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner_address(): Address {
    let result = super.call("owner_address", "owner_address():(address)", []);

    return result[0].toAddress();
  }

  try_owner_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "owner_address",
      "owner_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  price_band(): BigInt {
    let result = super.call("price_band", "price_band():(uint256)", []);

    return result[0].toBigInt();
  }

  try_price_band(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("price_band", "price_band():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  price_target(): BigInt {
    let result = super.call("price_target", "price_target():(uint256)", []);

    return result[0].toBigInt();
  }

  try_price_target(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("price_target", "price_target():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redemption_fee(): BigInt {
    let result = super.call("redemption_fee", "redemption_fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_redemption_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redemption_fee",
      "redemption_fee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  refresh_cooldown(): BigInt {
    let result = super.call(
      "refresh_cooldown",
      "refresh_cooldown():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_refresh_cooldown(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "refresh_cooldown",
      "refresh_cooldown():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  timelock_address(): Address {
    let result = super.call(
      "timelock_address",
      "timelock_address():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_timelock_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "timelock_address",
      "timelock_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  weth_address(): Address {
    let result = super.call("weth_address", "weth_address():(address)", []);

    return result[0].toAddress();
  }

  try_weth_address(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth_address", "weth_address():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _creator_address(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _timelock_address(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddPoolCall extends ethereum.Call {
  get inputs(): AddPoolCall__Inputs {
    return new AddPoolCall__Inputs(this);
  }

  get outputs(): AddPoolCall__Outputs {
    return new AddPoolCall__Outputs(this);
  }
}

export class AddPoolCall__Inputs {
  _call: AddPoolCall;

  constructor(call: AddPoolCall) {
    this._call = call;
  }

  get pool_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddPoolCall__Outputs {
  _call: AddPoolCall;

  constructor(call: AddPoolCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class BurnFromCall extends ethereum.Call {
  get inputs(): BurnFromCall__Inputs {
    return new BurnFromCall__Inputs(this);
  }

  get outputs(): BurnFromCall__Outputs {
    return new BurnFromCall__Outputs(this);
  }
}

export class BurnFromCall__Inputs {
  _call: BurnFromCall;

  constructor(call: BurnFromCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnFromCall__Outputs {
  _call: BurnFromCall;

  constructor(call: BurnFromCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class Pool_burn_fromCall extends ethereum.Call {
  get inputs(): Pool_burn_fromCall__Inputs {
    return new Pool_burn_fromCall__Inputs(this);
  }

  get outputs(): Pool_burn_fromCall__Outputs {
    return new Pool_burn_fromCall__Outputs(this);
  }
}

export class Pool_burn_fromCall__Inputs {
  _call: Pool_burn_fromCall;

  constructor(call: Pool_burn_fromCall) {
    this._call = call;
  }

  get b_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get b_amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Pool_burn_fromCall__Outputs {
  _call: Pool_burn_fromCall;

  constructor(call: Pool_burn_fromCall) {
    this._call = call;
  }
}

export class Pool_mintCall extends ethereum.Call {
  get inputs(): Pool_mintCall__Inputs {
    return new Pool_mintCall__Inputs(this);
  }

  get outputs(): Pool_mintCall__Outputs {
    return new Pool_mintCall__Outputs(this);
  }
}

export class Pool_mintCall__Inputs {
  _call: Pool_mintCall;

  constructor(call: Pool_mintCall) {
    this._call = call;
  }

  get m_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get m_amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Pool_mintCall__Outputs {
  _call: Pool_mintCall;

  constructor(call: Pool_mintCall) {
    this._call = call;
  }
}

export class RefreshCollateralRatioCall extends ethereum.Call {
  get inputs(): RefreshCollateralRatioCall__Inputs {
    return new RefreshCollateralRatioCall__Inputs(this);
  }

  get outputs(): RefreshCollateralRatioCall__Outputs {
    return new RefreshCollateralRatioCall__Outputs(this);
  }
}

export class RefreshCollateralRatioCall__Inputs {
  _call: RefreshCollateralRatioCall;

  constructor(call: RefreshCollateralRatioCall) {
    this._call = call;
  }
}

export class RefreshCollateralRatioCall__Outputs {
  _call: RefreshCollateralRatioCall;

  constructor(call: RefreshCollateralRatioCall) {
    this._call = call;
  }
}

export class RemovePoolCall extends ethereum.Call {
  get inputs(): RemovePoolCall__Inputs {
    return new RemovePoolCall__Inputs(this);
  }

  get outputs(): RemovePoolCall__Outputs {
    return new RemovePoolCall__Outputs(this);
  }
}

export class RemovePoolCall__Inputs {
  _call: RemovePoolCall;

  constructor(call: RemovePoolCall) {
    this._call = call;
  }

  get pool_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemovePoolCall__Outputs {
  _call: RemovePoolCall;

  constructor(call: RemovePoolCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetControllerCall extends ethereum.Call {
  get inputs(): SetControllerCall__Inputs {
    return new SetControllerCall__Inputs(this);
  }

  get outputs(): SetControllerCall__Outputs {
    return new SetControllerCall__Outputs(this);
  }
}

export class SetControllerCall__Inputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }

  get _controller_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetControllerCall__Outputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }
}

export class SetETHUSDOracleCall extends ethereum.Call {
  get inputs(): SetETHUSDOracleCall__Inputs {
    return new SetETHUSDOracleCall__Inputs(this);
  }

  get outputs(): SetETHUSDOracleCall__Outputs {
    return new SetETHUSDOracleCall__Outputs(this);
  }
}

export class SetETHUSDOracleCall__Inputs {
  _call: SetETHUSDOracleCall;

  constructor(call: SetETHUSDOracleCall) {
    this._call = call;
  }

  get _eth_usd_consumer_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetETHUSDOracleCall__Outputs {
  _call: SetETHUSDOracleCall;

  constructor(call: SetETHUSDOracleCall) {
    this._call = call;
  }
}

export class SetFRAXEthOracleCall extends ethereum.Call {
  get inputs(): SetFRAXEthOracleCall__Inputs {
    return new SetFRAXEthOracleCall__Inputs(this);
  }

  get outputs(): SetFRAXEthOracleCall__Outputs {
    return new SetFRAXEthOracleCall__Outputs(this);
  }
}

export class SetFRAXEthOracleCall__Inputs {
  _call: SetFRAXEthOracleCall;

  constructor(call: SetFRAXEthOracleCall) {
    this._call = call;
  }

  get _frax_oracle_addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weth_address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetFRAXEthOracleCall__Outputs {
  _call: SetFRAXEthOracleCall;

  constructor(call: SetFRAXEthOracleCall) {
    this._call = call;
  }
}

export class SetFXSAddressCall extends ethereum.Call {
  get inputs(): SetFXSAddressCall__Inputs {
    return new SetFXSAddressCall__Inputs(this);
  }

  get outputs(): SetFXSAddressCall__Outputs {
    return new SetFXSAddressCall__Outputs(this);
  }
}

export class SetFXSAddressCall__Inputs {
  _call: SetFXSAddressCall;

  constructor(call: SetFXSAddressCall) {
    this._call = call;
  }

  get _fxs_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFXSAddressCall__Outputs {
  _call: SetFXSAddressCall;

  constructor(call: SetFXSAddressCall) {
    this._call = call;
  }
}

export class SetFXSEthOracleCall extends ethereum.Call {
  get inputs(): SetFXSEthOracleCall__Inputs {
    return new SetFXSEthOracleCall__Inputs(this);
  }

  get outputs(): SetFXSEthOracleCall__Outputs {
    return new SetFXSEthOracleCall__Outputs(this);
  }
}

export class SetFXSEthOracleCall__Inputs {
  _call: SetFXSEthOracleCall;

  constructor(call: SetFXSEthOracleCall) {
    this._call = call;
  }

  get _fxs_oracle_addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weth_address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetFXSEthOracleCall__Outputs {
  _call: SetFXSEthOracleCall;

  constructor(call: SetFXSEthOracleCall) {
    this._call = call;
  }
}

export class SetFraxStepCall extends ethereum.Call {
  get inputs(): SetFraxStepCall__Inputs {
    return new SetFraxStepCall__Inputs(this);
  }

  get outputs(): SetFraxStepCall__Outputs {
    return new SetFraxStepCall__Outputs(this);
  }
}

export class SetFraxStepCall__Inputs {
  _call: SetFraxStepCall;

  constructor(call: SetFraxStepCall) {
    this._call = call;
  }

  get _new_step(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFraxStepCall__Outputs {
  _call: SetFraxStepCall;

  constructor(call: SetFraxStepCall) {
    this._call = call;
  }
}

export class SetMintingFeeCall extends ethereum.Call {
  get inputs(): SetMintingFeeCall__Inputs {
    return new SetMintingFeeCall__Inputs(this);
  }

  get outputs(): SetMintingFeeCall__Outputs {
    return new SetMintingFeeCall__Outputs(this);
  }
}

export class SetMintingFeeCall__Inputs {
  _call: SetMintingFeeCall;

  constructor(call: SetMintingFeeCall) {
    this._call = call;
  }

  get min_fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMintingFeeCall__Outputs {
  _call: SetMintingFeeCall;

  constructor(call: SetMintingFeeCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get _owner_address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetPriceBandCall extends ethereum.Call {
  get inputs(): SetPriceBandCall__Inputs {
    return new SetPriceBandCall__Inputs(this);
  }

  get outputs(): SetPriceBandCall__Outputs {
    return new SetPriceBandCall__Outputs(this);
  }
}

export class SetPriceBandCall__Inputs {
  _call: SetPriceBandCall;

  constructor(call: SetPriceBandCall) {
    this._call = call;
  }

  get _price_band(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPriceBandCall__Outputs {
  _call: SetPriceBandCall;

  constructor(call: SetPriceBandCall) {
    this._call = call;
  }
}

export class SetPriceTargetCall extends ethereum.Call {
  get inputs(): SetPriceTargetCall__Inputs {
    return new SetPriceTargetCall__Inputs(this);
  }

  get outputs(): SetPriceTargetCall__Outputs {
    return new SetPriceTargetCall__Outputs(this);
  }
}

export class SetPriceTargetCall__Inputs {
  _call: SetPriceTargetCall;

  constructor(call: SetPriceTargetCall) {
    this._call = call;
  }

  get _new_price_target(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPriceTargetCall__Outputs {
  _call: SetPriceTargetCall;

  constructor(call: SetPriceTargetCall) {
    this._call = call;
  }
}

export class SetRedemptionFeeCall extends ethereum.Call {
  get inputs(): SetRedemptionFeeCall__Inputs {
    return new SetRedemptionFeeCall__Inputs(this);
  }

  get outputs(): SetRedemptionFeeCall__Outputs {
    return new SetRedemptionFeeCall__Outputs(this);
  }
}

export class SetRedemptionFeeCall__Inputs {
  _call: SetRedemptionFeeCall;

  constructor(call: SetRedemptionFeeCall) {
    this._call = call;
  }

  get red_fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRedemptionFeeCall__Outputs {
  _call: SetRedemptionFeeCall;

  constructor(call: SetRedemptionFeeCall) {
    this._call = call;
  }
}

export class SetRefreshCooldownCall extends ethereum.Call {
  get inputs(): SetRefreshCooldownCall__Inputs {
    return new SetRefreshCooldownCall__Inputs(this);
  }

  get outputs(): SetRefreshCooldownCall__Outputs {
    return new SetRefreshCooldownCall__Outputs(this);
  }
}

export class SetRefreshCooldownCall__Inputs {
  _call: SetRefreshCooldownCall;

  constructor(call: SetRefreshCooldownCall) {
    this._call = call;
  }

  get _new_cooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRefreshCooldownCall__Outputs {
  _call: SetRefreshCooldownCall;

  constructor(call: SetRefreshCooldownCall) {
    this._call = call;
  }
}

export class SetTimelockCall extends ethereum.Call {
  get inputs(): SetTimelockCall__Inputs {
    return new SetTimelockCall__Inputs(this);
  }

  get outputs(): SetTimelockCall__Outputs {
    return new SetTimelockCall__Outputs(this);
  }
}

export class SetTimelockCall__Inputs {
  _call: SetTimelockCall;

  constructor(call: SetTimelockCall) {
    this._call = call;
  }

  get new_timelock(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTimelockCall__Outputs {
  _call: SetTimelockCall;

  constructor(call: SetTimelockCall) {
    this._call = call;
  }
}

export class ToggleCollateralRatioCall extends ethereum.Call {
  get inputs(): ToggleCollateralRatioCall__Inputs {
    return new ToggleCollateralRatioCall__Inputs(this);
  }

  get outputs(): ToggleCollateralRatioCall__Outputs {
    return new ToggleCollateralRatioCall__Outputs(this);
  }
}

export class ToggleCollateralRatioCall__Inputs {
  _call: ToggleCollateralRatioCall;

  constructor(call: ToggleCollateralRatioCall) {
    this._call = call;
  }
}

export class ToggleCollateralRatioCall__Outputs {
  _call: ToggleCollateralRatioCall;

  constructor(call: ToggleCollateralRatioCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
